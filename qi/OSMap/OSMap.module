<?php
/**
 * Created by PhpStorm.
 * User: King
 * Date: 14-2-4
 * Time: 下午12:38
 */

/**
 * Implementation of hook_menu
 */
function OSMap_menu(){

    $items = array();
    $items['OSMap'] = array(
        'title' => 'OSMap',
        'description' => 'A map module for OpenScholar',
        'page callback' => 'OSMap_map_show', // call the page
        'access arguments' => array('access content'), //The argument below is recommended for all users to have access to a page.
    );
	
	$items['OSMap/map'] = array(
    'title' => 'map',
    'page callback' => 'OSMap_map_show',
    'access callback' => TRUE,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
	);
  
	$items['OSMap/list'] = array(
    'title' => 'Address List',
	'page callback' => 'OSMap_list',
	'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => -9,
	);
	
	$items['OSMap/add'] = array(
    'title' => 'Add Address Entry',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('OSMap_form_add'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
	);
	
	$items['OSMap/update'] = array(
    'title' => 'Update Address Entry',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('OSMap_form_update'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => -7,
	);
	
	$items['OSMap/table'] = array(
    'title' => 'Form Table',
	'page callback' => 'drupal_get_form',
    'page arguments' => array('OSMap_form_table'),
	'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => -6,
	);
	
	$items['OSMap/delete/%'] = array(
	   'page callback' => 'delete_location',
	   'page arguments' => array(2,3),
	   'access arguments' => array('access location id'),
	   'access callback' => TRUE,
	   'type' => MENU_CALLBACK,
	);
  
    return $items;
}

/**
 * Implementation of the output function
 */
function OSMap_page() {

    return 'This is a hello world test of OSMap';
}

// add entry
function OSMap_entry_insert($entry) {
  $return_value = NULL;
  try {
    $return_value = db_insert('OSMap')
                    ->fields($entry)
                    ->execute();
  }
  catch (Exception $e) {
    drupal_set_message(t('db_insert failed. Message = %message, query= %query',
      array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
  }
  return $return_value;
}

// update entry
function OSMap_entry_update($entry) {
  try {
    // db_update()...->execute() returns the number of rows updated.
    $count = db_update('OSMap')
              ->fields($entry)
              ->condition('nid', $entry['nid'])
              ->execute();
  }
  catch (Exception $e) {
    drupal_set_message(t('db_update failed. Message = %message, query= %query',
      array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
  }
  return $count;
}

//
function delete_location($nid) {


	$result = OSMap_entry_delete($nid);
	if ($result) {
		drupal_set_message("delete entry: ".$nid);
		drupal_goto("OSMap/table");
	}
}


// delete entry
function OSMap_entry_delete($nid) {
  try {
    $return_value = db_delete('OSMap')
                    ->condition('nid', $nid)
                    ->execute();
  }
  catch (Exception $e) {
    drupal_set_message(t('db_delete failed. Message = %message, query= %query',
      array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
  }
  return $return_value;
}

// add a new entry
function OSMap_form_table($form, &$form_state) {

	drupal_add_library('system' , 'drupal.ajax');
	$header = array(
				array('data' => 'ID'),
				array('data' => 'Title'),
				array('data' => 'Street'),
				array('data' => 'City'),
				array('data' => 'State'),
				array('data' => 'Postal_Code'),
				array('data' => 'Latitude'),
				array('data' => 'Longitude'),
				array('data' => 'Delete'),
				array('data' => 'Edit'),
	);
	
	$form = array(
			'#prefix' => '<div id="form_table">',
			'#suffix' => '</div>',);
			
	$map_data = OSMap_entry_load();
	
	foreach($map_data as $result) {
		//$options = array('query' => drupal_get_destination(),);
		$rows[] = array(
					'#nid' =>$result->nid,
					'#title' =>$result->title,
					'#street' =>$result->street,
					'#city' =>$result->city,
					'#state' =>$result->state,
					'#postal_code' =>$result->postal_code,
					'#lat' =>$result->lat,
					'#lng' =>$result->lng,
					'#delete'=> l(t('Delete'), "OSMap/delete/".$result->nid,
								array(
								//'attributes' => array('onClick' => 'if(!confirm("Really Delete?")){return false;}',
			  //  '#ajax' => array ('effect' => 'fade','progress' => array('type' => 'none'),),	   
			    
									//), 
									'query' => drupal_get_destination())),
					'#edit' => l(t('Edit'),"testmap/update/".$result->nid )
				);
		
	};
	  
	$form['add'] = array(
						'#type' => 'link',
						'#title' => 'Add New Location',
						'#href' => 'testmap/add'
	);
	
	$form['locations'] = array(
							'#theme' => 'table',
							'#header' => $header,
							'#rows' => $rows,
							'#empty' => t('No locations entered in the table'),
							'#title' => 'Locations list',
							'#ajax' => array(
							'wrapper' => 'form_table',
					 //	 'callback' => 'location_form_list_callback',   
							),
  );
	
	return $form;
}


// load all the entries from the database
function OSMap_list() {
		
  $output = '';

  // Get all entries in the table.
  if ($entries = OSMap_entry_load()) {
    $rows = array();
	$entry = t('');
    foreach ($entries as $entry) {
      // Sanitize the data before handing it off to the theme layer.
      $rows[] = array_map('check_plain', (array) $entry);
    }
	
    // Make a table for them.
    $header = array(t('Id'), t('title'), t('street'), t('city'), t('state'), t('postal_code'), t('lat'), t('lng'));
    
	/*
	foreach ($rows as $key=>$value) {
		
		$record_id = $rows[0]['Id'];
		drupal_set_message($record_id);
		
		$rows[$key][] = '<input type="button" value="Delete" onclick="document.location=\'?q=OSMap/delete/ '+$record_id+' \'" />';
		
		 // <input type="button" value="Delete record" onclick="document.location=\'mymodule/deleterecord/'+$record_id+'\';" />
	}
	*/
	
	$output .= theme('table', array('header' => $header, 'rows' => $rows));
	
	
	
  }
  else {
    drupal_set_message(t('No entries have been added yet.'));
  }
  return $output;
}

// load all of the address entries from the database
function OSMap_entry_load() {
  // Read all fields from the dbtng_example table.
  $select = db_select('OSMap', 'example');
  $select->fields('example');
  $entry = array();
  
  // Add each field and value as a condition to this query.
  foreach ($entry as $field => $value) {
    $select->condition($field, $value);
  }
  // Return the result in object format.
  return $select->execute()->fetchAll();
}

// add a new entry
function OSMap_form_add($form, &$form_state) {
  $form = array();

  $form['add'] = array(
    '#type'  => 'fieldset',
    '#title' => t('Add a address entry'),
  );
  $form['add']['title'] = array(
    '#type'  => 'textfield',
    '#title' => t('Title'),
    '#size'  => 30,
  );
  $form['add']['street'] = array(
    '#type'  => 'textfield',
    '#title' => t('Street'),
    '#size'  => 30,
  );
  $form['add']['city'] = array(
    '#type'  => 'textfield',
    '#title' => t('City'),
    '#size'  => 30,
  );
  $form['add']['street'] = array(
    '#type'  => 'textfield',
    '#title' => t('Street'),
    '#size'  => 30,
  );
  $form['add']['state'] = array(
    '#type'  => 'textfield',
    '#title' => t('State'),
    '#size'  => 30,
  );
  $form['add']['postal_code'] = array(
    '#type'  => 'textfield',
    '#title' => t('Postal Code'),
    '#size'  => 30,
  );
  $form['add']['lat'] = array(
    '#type'  => 'textfield',
    '#title' => t('lat'),
    '#size'  => 30,
  );
  $form['add']['lng'] = array(
    '#type'  => 'textfield',
    '#title' => t('lng'),
    '#size'  => 30,
  );
  $form['add']['submit'] = array(
    '#type'  => 'submit',
    '#value' => t('Add'),
  );

  return $form;
}

function OSMap_form_add_submit($form, &$form_state) {
  global $user;

  // Save the submitted entry.
  $entry = array(
    'title'    => $form_state['values']['title'],
    'street'   => $form_state['values']['street'],
    'city'     => $form_state['values']['city'],
	'state'    => $form_state['values']['state'],
    'postal_code'    => $form_state['values']['postal_code'],
	'lat'      => $form_state['values']['lat'],
	'lng'      => $form_state['values']['lng'],
  );
  $return = OSMap_entry_insert($entry);
  if ($return) {
    drupal_set_message(t("Created entry @entry", array('@entry' => print_r($entry, TRUE))));
  }
}

// update the map
function OSMap_form_update($form, &$form_state) {
  $form = array(
    '#prefix' => '<div id="updateform">',
    '#suffix' => '</div>',
  );

  $entries = OSMap_entry_load();
  $keyed_entries = array();
  if (empty($entries)) {
    $form['no_values'] = array(
      '#value' => t("No entries exist in the table dbtng_example table."),
    );
    return $form;
  }

  foreach ($entries as $entry) {
    $options[$entry->nid] = t("@nid: @title", array('@nid' => $entry->nid, '@title' => $entry->title));
    $keyed_entries[$entry->nid] = $entry;
  }
  $default_entry = !empty($form_state['values']['nid']) ? $keyed_entries[$form_state['values']['nid']] : $entries[0];

  $form_state['entries'] = $keyed_entries;

  $form['nid'] = array(
    '#type' => 'select',
    '#options' => $options,
    '#title' => t('Choose entry to update'),
    '#default_value' => $default_entry->nid,
    '#ajax' => array(
      'wrapper' => 'updateform',
      'callback' => 'OSMap_form_update_callback',
    ),
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated title'),
    '#size' => 30,
    '#default_value' => $default_entry->title,
  );

  $form['street'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated street'),
    '#size' => 30,
    '#default_value' => $default_entry->street,
  );
  
  $form['city'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated city'),
    '#size' => 30,
    '#default_value' => $default_entry->city,
    //'#description' => t("Values greater than 127 will cause an exception"),
  );
  
  $form['state'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated state'),
    '#size' => 30,
    '#default_value' => $default_entry->state,
  );
  
  $form['postal_code'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated postal code'),
    '#size' => 30,
    '#default_value' => $default_entry->postal_code,
  );
  
  $form['lat'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated lat'),
    '#size' => 30,
    '#default_value' => $default_entry->lat,
  );
  
  $form['lng'] = array(
    '#type' => 'textfield',
    '#title' => t('Updated lng'),
    '#size' => 30,
    '#default_value' => $default_entry->lng,
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Update'),
  );
  return $form;
}

function OSMap_form_update_callback($form, $form_state) {
  $entry = $form_state['entries'][$form_state['values']['nid']];
  // Setting the #value of items is the only way I was able to figure out
  // to get replaced defaults on these items. #default_value will not do it
  // and shouldn't.
  foreach (array('title', 'street', 'city','state','postal_code','lat','lng') as $item) {
    $form[$item]['#value'] = $entry->$item;
  }
  return $form;
}

/**
 * Submit handler for 'update entry' form.
 */
function OSMap_form_update_submit($form, &$form_state) {
  global $user;

  // Save the submitted entry.
  $entry = array(
    'nid' => $form_state['values']['nid'],
    'title' => $form_state['values']['title'],
    'street' => $form_state['values']['street'],
    'city' => $form_state['values']['city'],
	'state' => $form_state['values']['state'],
	'postal_code' => $form_state['values']['postal_code'],
	'lat' => $form_state['values']['lat'],
	'lng' => $form_state['values']['lng'],
    
  );
  $count = OSMap_entry_update($entry);
  drupal_set_message(t("Updated entry @entry (@count row updated)", array('@count' => $count, '@entry' => print_r($entry, TRUE))));
}

// show the map
function OSMap_map_show(){

	drupal_add_js('https://maps.googleapis.com/maps/api/js?key=AIzaSyAz4kiKnyoMKp0e8ORuqbWNZZpplrxGsGE&sensor=true', 'external');
	drupal_add_js('sites/all/modules/OSMap/source.js');
	
	if ($entries = OSMap_entry_load()) {
    
		$rows = array();
		$makers = array();
		$entry = t('');
		
		foreach ($entries as $entry) {
			$rows[] = array_map('check_plain', (array) $entry);
		}
		
		foreach ($rows as $row) {
			$makers[] = array_map ('check_plain', array(	
				'lat' => $row['lat'],
				'lng' => $row['lng'],
				'title' => $row['title'],
			));
		}	
	}
	else {
		drupal_set_message(t('No entries have been added yet.'));
	}
	
	// add parameters
	
	drupal_add_js(array ("OSMap" => $makers), 'setting');
	
	return '<div id="googleMap" style="width:690px;height:450px;"></div>';
			
}











