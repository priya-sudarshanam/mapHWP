<?php

/* requiring files which contain dbfunctions and helper functions */
require_once('testmap.dbfunctions.inc');
require_once('testmap.helperfunctions.inc');

/* tips
* print_r formatted version of the array and var_dump but with more detail
*/

/**
 * hook_menu for map
 */	
function testmap_menu(){
	
    $items = array();
    $items['testmap'] = array(
        'title' => 'Map',
        'description' => 'Displays map, enables addition, deletion and updation of locations',
        'page callback' => 'mapShow', 
		'access callback' => TRUE,
		);
	$items['testmap/map']=array(
	    'title' => 'Map Display',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => -10,
    );	
     $items['testmap/list'] =array(
	   'title' => 'Locations List, Add, Delete & Edit',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -9,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('locationsList_form'),
	   'access callback' => TRUE,
	 );
	 $items['testmap/add'] = array (
	   'type' => MENU_CALLBACK,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('testmap_form_add'),
	   'access callback' => TRUE,
	 );
	 $items['testmap/delete/nojs/%'] = array (
	   'page callback' => 'delete_location',
	   'page arguments' => array(2,3),
	   'access arguments' => array('access location id'),
	   'access callback' => TRUE,
	   'type' => MENU_CALLBACK,
     );
	/*  $items['testmap/delete/ajax/%'] = array (
       'delivery callback' => 'ajax_deliver',
	    ) + $items['testmap/delete/nojs/%'];
   */
	 $items['testmap/update/%id'] = array (
	   'type' => MENU_CALLBACK,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('testmap_form_update',2),
	   'access callback' => TRUE,
	 );
	 
	return $items;
}

function delete_location($ajax, $id){
      $success = map_delete_data($id);
      if ($success){
        if ($ajax === 'ajax'){
	 
      
	 			$commands = array();
	 			  $commands[] = ajax_command_remove($id);
				  return array(
				   '#type' => 'ajax',
				   '#commands' => $commands,
				   );
				  
				  $commands[] = ajax_command_remove('#messages');
				  
				  $commands[] = ajax_command_after('#header-region', '<div id="messages">' . theme('status_messages') . '</div>');	} 
      else {
      drupal_set_message(t('Deleted 1 location'));
	  drupal_goto();
   }
  }
  else {
    drupal_set_message($success);
   }
  }
  
  
  
/* function testmap_delete_confirm($form,&$form_state, $location){
   $location_name = map_select_data_id($location);
   $form['_location'] = array(
      '#type' => 'value',
	  '#value' => $location,   
   );
   $form['_location_name']= array(
      '#type' => 'value',
	  '#value' => $location_name['name'],
   );
  
   return confirm_form($form,
     t('Are you sure you want to delete location: "'.$location_name['name']. '" ?'),
	 isset($_GET['destination']) ? $_GET['destination'] : 'testmap/list',
	 t('This action cannot be undone.'),
	 t('Delete'),
	 t('Cancel'));
}

function testmap_delete_confirm_submit($form, &$form_state){
    $location = $form_state['values']['_location'];
	$location_name = $form_state['values']['_location_name'];
	try {
			if($form_state['values']['confirm']){
				$location = $form_state['values']['_location'];
				map_delete_data($location);
			    drupal_set_message(t('Location "'.$location_name.'"  has been deleted successfully.'));
	          }
		}
	catch (Exception $e){
	    drupal_set_message(t('Location "'.$location_name.'" could not be deleted. Message = %message, query=%query', 
	           array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
	  }
	
	drupal_goto("testmap/list"); 
} */

/**
 * Updates the selected location in the table = 'osmap'. 
 */
function testmap_form_update($form, &$form_state, $location_id){
      $mapValue = map_select_data_id($location_id);
	  $rows = array();
	  $header = array(t('Name'),t('Address'),t('Type'));
	  $rows[] = array(
				  'name' => $mapValue['name'],
                  'address' => $mapValue['address'],
			      'type' => $mapValue['type'], 
                );
     $form['table'] = array(
	   '#theme' => 'table',
	   '#empty' => t('No users found'),
	   '#header' => $header,
	   '#rows' => $rows,
	   '#id' => $location_id,
	   );
	  	
   // $typeOptions = type_list();  
	
	return create_form($form, 'update');
}
/**
 * update submit form
 */
function testmap_form_update_submit($form, &$form_state){
    $updatingId=($form['table']['#id']);
	  $lat_lng = get_latitude_longitude($form_state['values']['address']);
    $mapValues =  return_map_values($form_state['values']['name'], $form_state['values']['address'],
	                                $form_state['values']['type'], $lat_lng['lat'], $lat_lng['lng']
									);
   try {
      $count = map_update_data($mapValues, $updatingId);
      drupal_set_message(t("Updated location @mapValue (@count row updated)", 
	                     array('@count' => $count, '@mapValue' =>print_r($mapValues['name'], TRUE))));
	  }
   catch (Exception $e)
    {
       drupal_set_message(t('Failed to update location. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
      } 
}
 
 /**
 * creates form for taking in new location details
 */  
function testmap_form_add($form, &$form_state){
        return create_form($form, 'add');
 }
 /**
 * adds new location details to the table = 'osmap'
 */

 function testmap_form_add_submit($form, &$form_state){
    $lat_lng = get_latitude_longitude($form_state['values']['address']);
	$mapValues =  return_map_values($form_state['values']['name'], $form_state['values']['address'],
	                                $form_state['values']['type'], $lat_lng['lat'], $lat_lng['lng']
									);
    try {
				$returnValue = map_insert_data($mapValues);
			    drupal_set_message(t('Successfully added new location: '.$mapValues['name']));
	     }
		 catch (Exception $e){
                drupal_set_message(t('Insert of location: "'.$mapValues['name'].'" failed. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');

          }   
	   drupal_goto("testmap/list"); 
 }
 
 /**
 * Displays values of the location in a table. For eg: name, address and type of the location
 * $mapValues retrieves the data from 'osmap' table and displays it in drupal table
 */
function locationsList_form($form, $form_state){
 drupal_add_library('system' , 'drupal.ajax');
 $header = create_table_header();
 $form = array(
   '#prefix' => '<div id="locationlist">',
    '#suffix' => '</div>',
 );
 
  $rows =array();
  $map_data = paging_map_data();
  foreach($map_data as $result) {
     $query = drupal_get_destination();
     $rows[] = array(
	  '#name' =>$result->name,
	  '#address' => $result->address,
	  '#type' => $result->type,
	  '#delete'=> l(t('Delete'), "testmap/delete/nojs/".$result->id,
	    array('#attributes' => array
		       ('#ajax' => array ('effect' => 'fade',
				    'progress' => array(
					   'type' => 'none'),),
			    '#id' => 'delete',
               	'#attached' => array (
       'js' => drupal_get_path ('module', 'testmap') . '/testmap2.js' ,),
				), 'query' => $query)),
	  '#edit' => l(t('Edit'),"testmap/update/".$result->id)
	  );
  };
  
      
  $form['add'] = array(
  '#type' => 'link',
  '#title' => 'Add New Location',
  '#href' => 'testmap/add'
  );
  
  $form['locations'] = array(
   '#theme' => 'table',
   '#header' => $header,
   '#rows' => $rows,
   '#empty' => t('No locations entered in the table'),
   '#title' => 'Locations list',
   '#ajax' => array(
     'wrapper' => 'locationlist',
//	 'callback' => 'location_form_list_callback',   
   ),
  );
  
  return $form;
}
 
   
 /**
 * display the map with all the locations present in the table
 * #markup -> displays a google map in the div
 * #js -> attaches two js files, one external and one internal
 * $mapValues are sent via settings feature in drupal 7
 */
function mapShow(){
  try {
 	 $mapValues = map_select_data();
     $build = array(
	  '#markup' => '<div id="googleMap" style="width: 80%; height: 500px;"></div>',
	  '#attached' => array (
	     'js' => array (
		    'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false' => array('type' => 'external',),
	        drupal_get_path('module', 'testmap') . '/testmap.js' ,
			array(
				'type' => 'setting',
				'data' => array(
					'testmap' => $mapValues
					)
				)
			)		
		),
     );  
   }
  catch (Exception $e)
    {
       drupal_set_message(t('Error in displaying map. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
    }	
	return $build;	  
}






