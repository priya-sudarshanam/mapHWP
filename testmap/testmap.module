<?php

/* requiring files which contain dbfunctions and helper functions */
require_once('testmap.dbfunctions.inc');
require_once('testmap.helperfunctions.inc');

/* tips
* print_r formatted version of the array and var_dump but with more detail
*/

/**
 * hook_menu for map
 */	
function testmap_menu(){
	
    $items = array();
    $items['testmap'] = array(
        'title' => 'Map',
        'description' => 'Displays map, enables addition, deletion and updation of locations',
        'page callback' => 'mapShow', 
		'access callback' => TRUE,
		);
	$items['testmap/map']=array(
	    'title' => 'Map Display',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => -10,
    );	
     $items['testmap/list'] =array(
	   'title' => 'Locations List, Add, Delete & Edit',
	   'type' => MENU_LOCAL_TASK,
	   'weight' => -9,
	   'page callback' => 'drupal_get_form',
	   'page arguments' => array('locationsList_form'),
	   'access callback' => TRUE,
	 );
	 $items['testmap/add/nojs'] = array (
	   'type' => MENU_CALLBACK,
	   'tite' => 'Locations',
	   'page callback' => 'add_locations',
	   'page arguments' => array(2),
	   'access callback' => TRUE,
	   'delivery callback' => 'ajax_deliver',
	 );
	   $items['testmap/add/ajax'] = array (
       'delivery callback' => 'ajax_deliver',
	    ) + $items['testmap/add/nojs'];  
		
	 $items['testmap/delete/nojs/%'] = array (
	   'page callback' => 'delete_location',
	   'page arguments' => array(2,3),
	   'access arguments' => array('access location id'),
	   'access callback' => TRUE,
	   'type' => MENU_CALLBACK,
	   'delivery callback' => 'ajax_deliver',
     );
	   $items['testmap/delete/ajax/%'] = array (
       'delivery callback' => 'ajax_deliver',
	    ) + $items['testmap/delete/nojs/%']; 
   
	 $items['testmap/update/nojs/%'] = array (
	   'type' => MENU_CALLBACK,
	   'page callback' => 'update_location',
	   'page arguments' => array(2,3),
	   'access callback' => TRUE,
	   'access arguments' => array('access location id'),
	   'delivery callback' => 'ajax_deliver',
	 );
	 $items['testmap/update/ajax/%'] = array (
       'delivery callback' => 'ajax_deliver',
	    ) + $items['testmap/update/nojs/%'];  
	return $items;
}
/* Add functions begins 
************************************************************************************************
*/
function add_locations($js = NULL) {
   if (!$js) {
    return drupal_get_form('add_locations_form');
  }
    ctools_include('ajax');
    ctools_include('modal');
 
    $form_state = array(
      'ajax' => TRUE,
      'title' => t('Add Locations'),
    );
 
    $output = ctools_modal_form_wrapper('add_locations_form', $form_state);
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }
    	
  if (!empty($form_state['executed'])) {

    ctools_add_js('ajax-responder');

    $output = array();
    $output[] = ctools_modal_command_dismiss();
    $output[] = ctools_ajax_command_reload();
     }
    print ajax_render($output);
    exit();
  }
  
function add_locations_form($form, $form_state) {   
  $form = array();
  return create_form($form, 'add');
}
/**
 * adds new location details to the table = 'osmap'
 */
function add_locations_form_submit($form, &$form_state){
    $lat_lng = get_latitude_longitude($form_state['values']['address']);
	$mapValues =  return_map_values($form_state['values']['name'], $form_state['values']['address'],
	                                $form_state['values']['type'], $lat_lng['lat'], $lat_lng['lng']
									);
    try {
				$returnValue = map_insert_data($mapValues);
			    drupal_set_message(t('Successfully added new location: '.$mapValues['name']));
	     }
		 catch (Exception $e){
                drupal_set_message(t('Insert of location: "'.$mapValues['name'].'" failed. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');

          }   
	//   drupal_goto("testmap/list"); 
 }

/* Add functions ends 
************************************************************************************************
*/
/* Delete functions starts
************************************************************************************************
*/
function delete_location($js = NULL, $location_id){
  if(!$js) {
   $form = array();
   return drupal_get_form('delete_location_form');
   }
   ctools_include('ajax');
   ctools_include('modal');
   
   $form_state = array(
    'ajax' => TRUE,
	'title' => 'Delete location',
	'id' => $location_id
   );
   $output = ctools_modal_form_wrapper('delete_location_form', $form_state);
   if(!empty($form_state['ajax_commands'])){
     $output = $form_state['ajax_commands'];
   }
   if(!empty($form_state['executed'])){
    ctools_add_js('ajax-responder');
	$output[] = ctools_modal_command_dismiss();
	$output[] = ctools_ajax_command_reload();   
   }
   print ajax_render($output);
   exit();
  }
  
  function delete_location_form($form, $form_state){
    return create_delete_form($form, $form_state);
  }
  
 function delete_location_form_submit($form, $form_state){
   
     $deleting_id = ($form_state['id']);
	 $success = map_delete_data($deleting_id);
    drupal_set_message(t('Successfully deleleted location'));
 }
  
/* Delete functions ends
************************************************************************************************
*/

/* Update functions starts
************************************************************************************************
*/

function update_location($js = NULL, $location_id){
  if(!$js) {
   $form = array();
   return drupal_get_form('update_location_form');
   }
   ctools_include('ajax');
   ctools_include('modal');
   
   $form_state = array(
    'ajax' => TRUE,
	'title' => 'Update location',
	'id' => $location_id
   );
   $output = ctools_modal_form_wrapper('update_location_form', $form_state);
   if(!empty($form_state['ajax_commands'])){
     $output = $form_state['ajax_commands'];
   }
   if(!empty($form_state['executed'])){
    ctools_add_js('ajax-responder');
	$output[] = ctools_modal_command_dismiss();
	$output[] = ctools_ajax_command_reload();   
   }
   print ajax_render($output);
   exit();
}
function update_location_form($form, $form_state) {   
  $form = array();
  return create_form($form, 'update',$location_id);
}

/**
 * update submit form
 */
function update_location_form_submit($form, &$form_state){
    $updatingId=($form_state['id']);
   $lat_lng = get_latitude_longitude($form_state['values']['address']);
    $mapValues =  return_map_values($form_state['values']['name'], $form_state['values']['address'],
	                                $form_state['values']['type'], $lat_lng['lat'], $lat_lng['lng']
									);
   try {
      $count = map_update_data($mapValues, $updatingId);
      drupal_set_message(t("Updated location @mapValue (@count row updated)", 
	                     array('@count' => $count, '@mapValue' =>print_r($mapValues['name'], TRUE))));
	  }
   catch (Exception $e)
    {
       drupal_set_message(t('Failed to update location. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
      }   
}
 /* Update functions ends
************************************************************************************************
*/
 
 /**
 * Displays values of the location in a table. For eg: name, address and type of the location
 * $mapValues retrieves the data from 'osmap' table and displays it in drupal table
 */
function locationsList_form($form, $form_state){
   ctools_include('ajax');
   ctools_include('modal');
   ctools_modal_add_js();
  
   $links[] = l(t('Add New Location'), 'testmap/add/nojs', 
   array('attributes' => array('class' => 'ctools-use-modal')));
  
   $header = create_table_header();
   $rows =array();
   
   $map_data = paging_map_data();
   foreach($map_data as $result) {
     $rows[] = array(
	   'class' => array('location-row' => 'location-row-'. $result->id),
       'data' => array(
        $result->name,
		$result->address,
		$result->type,
	 //   ctools_ajax_text_button("delete", "testmap/delete/nojs/".$result->id, t('Delete this row')),
		l(t('Delete'), 'testmap/delete/nojs/'.$result->id, array('attributes' => array('class' => 'ctools-use-modal'))),
		l(t('Update'), 'testmap/update/nojs/'.$result->id, array('attributes' => array('class' => 'ctools-use-modal')))
	//	ctools_ajax_text_button("update", "testmap/update/nojs/".$result->id, array('attributes' => array('class' => 'ctools-use-modal'))),
		

      ),
	  ); 
  } 
  //theme('links', array('links' => $operations,'attributes' => array('class' => array('links', 'inline')),
  $output = theme('item_list', array('items' => $links));
  $output .=  theme('table', array('header' => $header, 'rows' => $rows, 'class' => 'locations-table'));
   $build = array(
    'markup' => array(
	   '#markup' => $output));
    
	return $build;
 }

 /**
 * display the map with all the locations present in the table
 * #markup -> displays a google map in the div
 * #js -> attaches two js files, one external and one internal
 * $mapValues are sent via settings feature in drupal 7
 */
function mapShow(){
  try {
 	 $mapValues = map_select_data();
     $build = array(
	  '#markup' => '<div id="googleMap" style="width: 80%; height: 500px;"></div>',
	  '#attached' => array (
	     'js' => array (
		    'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false' => array('type' => 'external',),
	        drupal_get_path('module', 'testmap') . '/testmap.js' ,
			array(
				'type' => 'setting',
				'data' => array(
					'testmap' => $mapValues
					)
				)
			)		
		),
     );  
   }
  catch (Exception $e)
    {
       drupal_set_message(t('Error in displaying map. Message = %message, query=%query', 
	            array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
    }	
	return $build;	  
}





